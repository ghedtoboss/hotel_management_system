basePath: /
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a hotel management system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Hotel Management System API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user with username and password
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Logged in successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "401":
          description: Invalid username or password
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Login a user
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with username, password, and email
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register a new user
  /rooms:
    post:
      consumes:
      - application/json
      description: Create a new room with number, type, status, and price
      parameters:
      - description: Room Number
        in: body
        name: number
        required: true
        schema:
          type: string
      - description: Room Type
        in: body
        name: type
        required: true
        schema:
          type: string
      - description: Room Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Room Price
        in: body
        name: price
        required: true
        schema:
          type: number
      produces:
      - application/json
      responses:
        "201":
          description: Room created successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new room
  /rooms/{room_id}:
    delete:
      description: Delete a room by ID
      parameters:
      - description: Room ID
        in: path
        name: room_id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Room not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a room
    put:
      consumes:
      - application/json
      description: Update an existing room with number, type, status, and price
      parameters:
      - description: Room ID
        in: path
        name: room_id
        required: true
        type: integer
      - description: Room Number
        in: body
        name: number
        required: true
        schema:
          type: string
      - description: Room Type
        in: body
        name: type
        required: true
        schema:
          type: string
      - description: Room Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Room Price
        in: body
        name: price
        required: true
        schema:
          type: number
      produces:
      - application/json
      responses:
        "200":
          description: Room updated successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Room not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update an existing room
swagger: "2.0"
